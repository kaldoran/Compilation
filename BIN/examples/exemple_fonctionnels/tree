% POST FIXEE % 

var n, i: int;
type pile_struct : array [ 0 .. 500 ] of char;
var pile : pile_struct;
var phrase : pile_struct;
var c : char;
var output : string[500];

function toppile ( pile : pile_struct ) return int 
var i : int;
start {
	i = 0; 
	while(pile[i] != '@') do {
		i++;
	}

	return i; 
	/* Indirectement la taille de la pile
	Pourquoi ne pas utiliser une variable taille de la pile ? ! ? 
	- bin car c'est trop simple  
	Pourquoi faire simple quand on peut faire compliquÃ©. */
};

proc empiler(c : char, pile : pile_struct ) 
var i : int;
start {
	i = toppile(pile);
	pile[i] = c;
	pile[++i] = '@';
};

function depiler(pile : pile_struct ) return char
var i : int;
var sv : char;
start {
	i = toppile(pile);

	if(i == 0) then {
		return "@";
	}

	sv = pile[--i];
	pile[i] = '@';

	return sv;
};

function sommet(pile : pile_struct ) return char
var i : int;
start {
	i = toppile(pile);

	if(i == 0) then {
		return "@";
	}

	return pile[--i];
};

function estentier(c : char) return bool
start {
	if( (c > "a" and c < "z") or (c > "A" and c < "Z" ) ) then {
		return true;
	}
	return false;
};

function priorite(c : char ) return int 
start {
	switch (c) {
		case "+" : return 1;
		case "-" : return 1;
		case "*" : return 2;
		case "/" : return 2;
		case "%" : return 2;
		default : return 1; 
	}
	return 0;
};

start {
	n = 0;
	c = "a";
	while(c != "@" or n == 500 ) do {
		if( n == 499 ) then {
			phrase[500] = "@";
		}
		else {
			write("Quel est l'expression a transformer en postfixÃ©e ?\n");
			read(c);
			empiler(c,phrase);
		}
		n++;
	}

	if( n != 500 ) then {
		phrase[n] = "@";
	}

	
	


	pile[0] = '\0';
	empiler("(", pile);
	n = 0;
	i = 0;
	while(phrase[n] != "@") do {
		c = phrase[i];
		if( estentier(c) ) then {
			n++;
			empiler(c,pile);
		}
		else if (c == "(" ) then {
			empiler(c,pile);
		}
		else if (c == ")" ) then {
			while( (c = depiler(pile)) != "(" ) do {
				n++;
				output += c;
			}
		}
		else {
			while( priorite(c) < priorite(sommet(pile)) ) do {
				n++;
				output += c;
				depiler(pile);
			}
			empiler(c,pile);
		}
		
	}

	while( (c = depiler(pile)) != "(" ) do {
		n++;
		output += c;
	}

		
write("%s",output);

-- se programme horrible vous est offert par nicolas --

}


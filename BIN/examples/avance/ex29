% MANQUE DIDEE %

type ideee :
	struct 
		uneidee : char;
	end struct;

type idee : array [ 0 .. 2 , 0 .. 100] of ideee; 
# nbidee idee 
#   0    aucune
var idtodo : int;
type todo : array [ 0 .. 100 ] of ideee;

function estdefinie(id : idee) return bool
    start {
        return id;
    };


function add_todo(id : int,uneidee : idee) return int 
    var add_todo : todo; 
    start {
	    if( estdefinie(uneidee) and id > 0) then{
		    
		    add_todo[id].uneidee = uneidee;
		    id++;
		    return id;
	    }
	    return 0;
    };

function genere_idee(id : idee) return string[50]
	var i, j, a : float;
	var cpt, florian, ronan : int;
	var tmp : string[50];

    
	start {
		for ( cpt = 0; cpt < 100 ; cpt++) do {
		    tmp = "";
		    switch (i = rand() % 3) {
		        case 1.0 : 
		            { tmp += "Manger ";  // Concatenation de 2 chaine est "+="
		                switch (j = i * (rand () + i)) {
		                    case (5.0 < j ) : tmp += "une pomme";
		                    case (7.0 < j ) : tmp += "une orange";
		                    case !(7.0 < j) : tmp += "un steak";
		                    default : tmp += "rien";
		                }
		            }
		        case 2.0 : { tmp += "Dormir ";
		                       switch (j = i * rand () + i * i) {
		                           case ( j != 0 ) : tmp += j+" heure";
		                           default : tmp += "Ã§a sert a rien";
		                       }
		                   }
		        case 3.0 : { tmp += "Boire ";
		                       switch (j = i * rand ()) {
		                           case ( 2.0 < j) : tmp += "une biere";
		                           case ( 3.0 > j) : tmp += "de l'eau";
		                           case ( 4.0 > j and j < 100.0) : tmp += "n'importe quoi , j'ai soif ";
		                           default : tmp += "rien du tout ... ";
		                       }
		                   }
		        default : tmp += "Ne rien faire";
		    }
		    id[1][cpt].uneidee = "ok";
		    id[2][cpt].uneidee = tmp;
		    write("Tu as plein d'idÃ©e maintenant");
		    id[3*florian-ronan][id[5][10].idee.uneidee] = 1;
		}
	};

proc affichage (id : idee) 
	var i : int;
	start {

		for ( i = 0 ; i < 100 ; i ++) do {
			write("[%d] - %d\n",id[0][i].uneidee,id[1][i].uneidee);	
		}
	};

var id : idee;
var todo : int;
var monidee : int;

start { 
	do {
		idtodo = 0;
		read (todo);
		if( todo == 1) then {
			read (monidee);
			idtodo = add_todo(idtodo, monidee);
		}
		genere_idee(id);
		affichage(id);
	} while( todo != 0);
}
